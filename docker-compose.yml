services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: dev-frontend
    restart: always
    expose:
      - "80"
    networks:
      - shared_network
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dev-frontend.rule=Host(`dev.stoneremnant.pp.ua`)"
      - "traefik.http.routers.dev-frontend.entrypoints=websecure"
      - "traefik.http.routers.dev-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.dev-frontend.loadbalancer.server.port=80"

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: dev-backend
    restart: always
    expose:
      - "3001"
    networks:
      - shared_network
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/storage:/app/storage
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dev-backend.rule=Host(`apidev.stoneremnant.pp.ua`)"
      - "traefik.http.routers.dev-backend.entrypoints=websecure"
      - "traefik.http.routers.dev-backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.dev-backend.loadbalancer.server.port=3001"

networks:
  shared_network:
    external: true


# services:
#   frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     container_name: dev-frontend
#     restart: always
#     ports:
#       - "3060:80"
#     networks:
#       - shared_network
#     env_file:
#       - ./frontend/.env
#     depends_on:
#       - backend
#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     container_name: dev-backend
#     restart: always
#     ports:
#       - "3061:3001"
#     networks:
#       - shared_network
#     env_file:
#       - ./backend/.env
#     volumes:
#     - ./backend/storage:/app/storage
# networks:
#   shared_network:
#     external: true
